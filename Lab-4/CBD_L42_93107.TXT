// NMEC: 93107

#1
// Encontre todos os atores que dirigiram um filme em que também atuaram e apresente o nome do ator e o título do filme.

match (actor)-[:DIRECTED]->(movie)<-[:ACTED_IN]-(actor) 
return actor.name as name, movie.title as title

#2
// Para cada filme realizado depois de 2005, apresente os nomes de todos os atores que atuaram nesse filme.

match (actor)-[:ACTED_IN]->(movie) 
where movie.released > 2005 
return collect(actor.name), movie.title

#3
// Encontre pares de nós com mais do que uma relação entre si.

match (n1)-[r]->(n2)
with n1, n2, count(r) as c
where c > 1
return n1, n2

#4
// Encontre todos os pares de pessoas que fizeram revisões do mesmo filme. Apresente os seus nomes e título de cada filme.

match (p1)-[:REVIEWED]->(movie)<-[:REVIEWED]-(p2)
return p1.name, p2.name, movie.title

#5
// Encontre todos os pares de atores que atuaram em vários filmes juntos.

match (a1)-[:ACTED_IN]->(movie)<-[:ACTED_IN]-(a2)
with a1, a2, count(movie) as c
where c > 1 and a1.name <> a2.name
return a1.name, a2.name

#6
// Determine a idade média do elenco do filme "Apollo 13" no ano do lançamento do filme.

match (actor)-[:ACTED_IN]->(movie {title: "Apollo 13"})
return avg(movie.released - actor.born)

#7
// Encontre os 10 filmes como elenco mais velho no momento do lançamento do filme. Apresente o filme e a idade média arredondada a 2 casas decimais, por ordem decrescente.

match (actor)-[:ACTED_IN]->(movie)
return movie, round(avg((movie.released - actor.born) * 100)) / 100 as average_age
order by average_age DESC
limit 10

#8
// Apresente o subgrafo ACTED_IN do filme como elenco mais novo, no momento do lançamento do filme.

match (actor)-[:ACTED_IN]->(movie)
with movie, collect(actor) as actors, avg(movie.released - actor.born) as average_age 
return movie, actors
order by average_age ASC
limit 1

#9
// Qual é o caminho mais curto (usando qualquer tipo de relação) entre John Cusack e Demi Moore?

match path = shortestPath(
(a {name: "John Cusack"})-[*]-(b {name: "Demi Moore"})
)
return path

#10
// Qual a dimensão caminho mais curto (usando qualquer tipo de relação) entre Keanu Reeves e Tom Cruise?

match path = shortestPath(
(a {name: "Keanu Reeves"})-[*]-(b {name: "Tom Cruise"})
)
return length(path) as shortest_path
order by shortest_path
limit 1